-- Creacion de tabla Usuarios OFICIAL --
CREATE TABLE Usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_tipo_usuario INT NOT NULL,
  nombres VARCHAR(20) NOT NULL,
  apellidos VARCHAR(20) NOT NULL,
  apodo VARCHAR(20),
  email VARCHAR(50) UNIQUE NOT NULL,
  direccion VARCHAR(35) UNIQUE NOT NULL,
  edad TINYINT UNSIGNED  NOT NULL,
  celular VARCHAR(9) UNIQUE NOT NULL,
  dni VARCHAR(8) UNIQUE NOT NULL,
  password VARCHAR(50) NOT NULL,
  estado TINYINT UNSIGNED DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_by INT,
  updated_by INT,
  FOREIGN KEY (created_by) REFERENCES Usuarios(id),
  FOREIGN KEY (updated_by) REFERENCES Usuarios(id),
  FOREIGN KEY (id_tipo_usuario) REFERENCES Tipos_Usuarios(id_tipo_usuario)
);



-- Creacion de tabla de tipos de usuarios oficial --
CREATE TABLE Tipos_Usuario (
    id_tipo_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nombre_tipo_usuario VARCHAR(20) NOT NULL,
    descripcion TEXT, 
    estado TINYINT UNSIGNED DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT,
    FOREIGN KEY (created_by) REFERENCES Usuarios(id),
    FOREIGN KEY (updated_by) REFERENCES Usuarios(id)
);



-- Creación de tabla de Paseadores oficial --

CREATE TABLE Paseadores oficial (
    id_paseador INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    id_categoria INT NOT NULL,
    id_calificacion INT NOT NULL,
    id_comentario INT NOT NULL,
    id_transaccion INT NOT NULL,
    experiencia TEXT, 
    ubicacion VARCHAR(20) NOT NULL, --
    tarifa_hora DECIMAL(8, 2) NOT NULL,
    saldo DECIMAL(8, 2) NOT NULL,
    disponibilidad BOOLEAN NOT NULL,
    foto VARCHAR(3) NOT NULL, -- Después será MEDIUMBLOB --
    estado TINYINT UNSIGNED DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_categoria) REFERENCES categorias(id_categoria) ON DELETE CASCADE,
    FOREIGN KEY (id_calificacion) REFERENCES Calificaciones(id_calificacion) ON DELETE CASCADE,
    FOREIGN KEY (id_comentario) REFERENCES Comentarios(id_comentario) ON DELETE CASCADE,
    FOREIGN KEY (id_transaccion) REFERENCES Transacciones(id_transaccion) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES Usuarios(id),
    FOREIGN KEY (updated_by) REFERENCES Usuarios(id)
);

-- Creacion de tabla transacciones oficial --
CREATE TABLE Transacciones (
    id_transaccion INT AUTO_INCREMENT PRIMARY KEY,
    id_paseador INT NOT NULL,
    id_propietario INT NOT NULL,
    id_tipo_transaccion INT NOT NULL,  -- pago o devolucion --
    id_estado_transaccion INT NOT NULL, 
    monto DECIMAL(8, 2) NOT NULL,
    estado TINYINT UNSIGNED DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT,
    FOREIGN KEY (id_paseador) REFERENCES Paseadores(id_paseador) ON DELETE CASCADE,
    FOREIGN KEY (id_propietario) REFERENCES Propietarios(id_propietario) ON DELETE CASCADE,
    FOREIGN KEY (id_tipo_transaccion) REFERENCES Tipos_Transaccion(id_tipo_transaccion) ON DELETE CASCADE,
    FOREIGN KEY (id_estado_transaccion) REFERENCES Estados_Transaccion(id_estado_transaccion) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES Usuarios(id),
    FOREIGN KEY (updated_by) REFERENCES Usuarios(id),
    
)

-- Creacion de tipo de transacciones oficial --
CREATE TABLE Tipos_Transaccion(
    id_tipo_transaccion INT NOT NULL,
    nombre_tipo VARCHAR(20) NOT NULL,
    estado TINYINT UNSIGNED DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    created_by INT,
    updated_by INT,
    FOREIGN KEY(created_by) REFERENCES Usuarios(id),
    FOREIGN KEY(updated_by) REFERENCES Usuarios(id)   
)


-- Creación de tabla estados de transacción --
CREATE TABLE Estados_Transaccion(
    id_estado_transaccion AUTO_INCREMENT PRIMARY KEY, -- pagado, deuda, etc --
    nombre_estado VARCHAR(20) NOT NULL,
    estado TINYINT UNSIGNED DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATED CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT
)

-- Creacion de tabla de Propietarios oficial --
CREATE TABLE Propietarios (
    id_propietario INT AUTO_INCREMENT,
    id_usuario INT NOT NULL,
    id_calificacion INT NOT NULL,
    id_comentario INT NOT NULL,
    id_mascota INT NOT NULL,
    preferencias_paseo TEXT,
    saldo DECIMAL(8, 2) NOT NULL,
    disponibilidad BOOLEAN NOT NULL,
    foto VARCHAR(3) NOT NULL -- MEDIUMBLOB
    estado TINYINT DEAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT,
    PRIMARY KEY (id_propietario),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_calificacion) REFERENCES Calificaciones(id_calificacion) ON DELETE CASCADE,
    FOREIGN KEY (id_comentario) REFERENCES Comentarios(id_comentario) ON DELETE CASCADE,
    FOREIGN KEY (id_mascota) REFERENCES Mascotas(id_mascota) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES Usuarios(id),
    FOREIGN KEY (updated_by) REFERENCES Usuarios(id) 
);



-- Creacion de Tabla de Categorias oficial --
CREATE TABLE Categorias (
    id_categoria INT AUTO_INCREMENT PRIMARY KEY,
    categoria_nombre VARCHAR(20) NOT NULL,
    estado TINYINT DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT,
    FOREIGN KEY (created_by) REFERENCES Usuarios(id),
    FOREIGN KEY (updated_by) REFERENCES Usuarios(id)
) 


-- Creacion de tabla normalizadora Mascotas_Propietario --

CREATE TABLE Mascotas_Propietarios (
    id_mascota_propietario INT AUTO_INCREMENT PRIMARY KEY,
    id_propietario INT NOT NULL,
    id_mascota INT NOT NULL,
    estado TINYINT UNSIGNED DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT,
    FOREIGN KEY (id_propietario) REFERENCES Propietarios(id_propietario) ON DELETE CASCADE,
    FOREIGN KEY (id_mascota) REFERENCES Mascotas(id_mascota) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES Usuarios(id),
    FOREIGN KEY (updated_by) REFERENCES Usuarios(id)
);


-- Creacion de tabla Mascotas --
CREATE TABLE Mascotas (
    id_mascota INT AUTO_INCREMENT PRIMARY KEY,
    id_tipo_mascota INT NOT NULL,
    nombre VARCHAR(20) NOT NULL,
    raza VARCHAR(20),
    pesoVARCHAR(20),
    edad INT NOT NULL,
    necesidades TEXT,
    estado TINYINT DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT,
    FOREIGN KEY (id_tipo_mascota) REFERENCES Tipos_Mascota(id_tipo_mascota) ON DELETE CASCADE
    FOREIGN KEY (created_by) REFERENCES Usuarios(id),
    FOREIGN KEY (updated_by) REFERENCES Usuarios(id)
);



-- Creacion de tabla de Tipo_Mascota --
CREATE TABLE Tipos_Mascota (
    id_tipo_mascota INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(20) NOT NULL,
    estado TINYINT DEFAULT 1, 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,
    updated_by INT,
    FOREIGN KEY (created_by) REFERENCES Usuarios(id),
    FOREIGN KEY (updated_by) REFERENCES Usuarios(id) 
);





/* Creacion de tabla de Paseos */
CREATE TABLE Paseos (
    id_paseo INT AUTO_INCREMENT,
    id_reserva INT NOT NULL,
    id_mascota INT NOT NULL,
    id_paseador INT NOT NULL,
    id_propietario INT NOT NULL,
    id_comentario INT NOT NULL, // Comentarios de los dueños sobre el servicio brindado
    costo INT, -- se paga realmente
    fecha_paseo INT,/* DATETIME NOT NULL, */
    hora_paseo INT, /* DATETIME NOT NULL */
    costo INT, /*  DESPUES PASAR A DOUBLE */
    duracion_real INT, /* TIME, */
    lugar VARCHAR(25), /* Especificamos lugar en el que paseará a nuestra mascota como un     parque puede que agreguemos despues una tabla de lugar */
    /* Por el momento no pondremmos el FK de la tabla de ubicaciones porque todavia no sé como poder plasmarlo */
    estado INT ,/* TINYINT DEFAULT 1, */
    PRIMARY KEY (id_paseo),
    FOREIGN KEY (id_reserva) REFERENCES Reservas(id_reserva) ON DELETE CASCADE,
    FOREIGN KEY (id_mascota) REFERENCES Mascotas(id_mascota) ON DELETE CASCADE,
    FOREIGN KEY (id_paseador) REFERENCES Paseadores(id_paseador) ON DELETE CASCADE,
    FOREIGN KEY (id_propietario) REFERENCES Propietarios(id_propietario) ON DELETE CASCADE,
    FOREIGN KEY (id_comentario) REFERENCES Comentarios(id_comentario) ON DELETE CASCADE
);


/*Creacion de Tabla de Reservas */
CREATE TABLE Reservas (
    id_reserva INT AUTO_INCREMENT,
    id_propietario INT NOT NULL,
    id_mascota INT NOT NULL,
    id_paseador INT,
    costo INT, -- Se menciona el costo del servicio
    fecha_reserva INT, /* hasta que toque esta parte DATE NOT NULL, fecha acordada para el paseo */
    hora_reserva INT, /* DATE NOT NULL, fecha acordada o escogida */
    punto_encuentro VARCHAR(25), /* Lugar acordado para que recoja a la mascota (por ejemplo parque) */
    duracion_reserva INT, /* Tiempo que se paseará a las mascota */
    lugar_paseo VARCHAR(20), /* Para que pasee en la cuadra */
    estado INT, /* TINYINT DEFAULT 1, */
    PRIMARY KEY (id_reserva),
    FOREIGN KEY (id_dueno) REFERENCES Duenos(id_dueno) ON DELETE CASCADE,
    FOREIGN KEY (id_mascota) REFERENCES Mascotas(id_mascota) ON DELETE CASCADE,
    FOREIGN KEY (id_paseador) REFERENCES Paseadores(id_paseador) ON DELETE CASCADE,
   
);


/* Creacion de tablas de Ubicaciones */
CREATE TABLE Ubicaciones (
    id_ubicacion INT AUTO_INCREMENT,
    id_propietario INT NOT NULL,
    id_paseador INT NOT NULL,
    id_mascota INT,
    nombre_ubicacion VARCHAR(20),
    ubicacion_propietario POINT, -- o LATITUD Y LONGITUD
    ubicacion_paseador POINT,-- o LATITUD Y LONGITUD
    estado INT,/* TINYINT DEFAULT 1 */
    PRIMARY KEY (id_ubicacion),
    FOREIGN KEY (id_propietario) REFERENCES Propietarios(id_propietario) ON DELETE CASCADE,
    FOREIGN KEY (id_paseador) REFERENCES Paseadores(id_paseador) ON DELETE CASCADE,
    FOREIGN KEY (id_mascota) REFERENCES Mascotas(id_mascota) ON DELETE CASCADE,
);


/* Creacion de tabla de Calificaciones */
CREATE TABLE Calificaciones (
    id_calificacion INT AUTO_INCREMENT,
    id_paseo INT NOT NULL,
    id_propietario INT,}

    id_paseador INT NOT NULL,
    tipo ENUM('COMENTARIO', 'CALIFICACION') NOT NULL, -- Enumeración para el tipo de calificación o comentario
    calificacion INT,
    estado TINYINT DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT, -- Campo para el ID del usuario que creó el registro
    updated_by INT, -- Campo para el ID del usuario que actualizó el registro
    PRIMARY KEY (id_calificacion),
    FOREIGN KEY (id_paseo) REFERENCES Paseos(id_paseo) ON DELETE CASCADE,
    FOREIGN KEY (id_dueno) REFERENCES Duenos(id_dueno) ON DELETE SET NULL,
    FOREIGN KEY (id_paseador) REFERENCES Paseadores(id_paseador) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES usuarios(id_usuario),
    FOREIGN KEY (updated_by) REFERENCES usuarios(id_usuario)
);


/* Creacion de tabla de Comentarios */
CREATE TABLE Comentarios (
    id_comentario INT AUTO_INCREMENT,
    id_paseo INT NOT NULL,
    id_dueno INT,
    id_paseador INT NOT NULL,
    tipo ENUM('USUARIO', 'DUEÑO') NOT NULL, -- Enumeración para el ti
po de comentario (Usuario o Dueño)
    comentario_usuario VARCHAR(255), -- Limitando la longitud del comentario del usuario a 255 caracteres
    comentario_dueno VARCHAR(255), -- Limitando la longitud del comentario del dueño a 255 caracteres
    estado TINYINT DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id_comentario),
    FOREIGN KEY (id_paseo) REFERENCES Paseos(id_paseo) ON DELETE CASCADE,
    FOREIGN KEY (id_dueno) REFERENCES Duenos(id_dueno) ON DELETE SET NULL,
    FOREIGN KEY (id_paseador) REFERENCES Paseadores(id_paseador) ON DELETE CASCADE
);

